.\" $Id: air_coil_syn.man,v 1.6 2004/09/02 05:55:38 dan Exp $
.\"
.\" Copyright (c) 2001, 2004 Dan McMahill
.\" All rights reserved.
.\"
.\" This code is derived from software written by Dan McMahill
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and.\"or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by Dan McMahill
.\"  4. The name of the author may not be used to endorse or promote products
.\"     derived from this software without specific prior written permission.
.\" 
.\"  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\"  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\"  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\"  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\"  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\"  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\"  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\"  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\"  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\"  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\"  SUCH DAMAGE.
.\"

.TH air_coil_syn 1 "March 2001" "Dan McMahill" "Wcalc"
.\".so ../sci.an
.SH NAME
air_coil_syn - Single layer air core solenoid inductor synthesis
.SH CALLING SEQUENCE
.nf
[N_out,len_out,fill_out] = 
  air_coil_syn(L,N,len,fill,AWG,rho,dia,freq,flag);
.fi
.SH PARAMETERS
.TP 10
L
: Desired inductance (Henries)
.TP
len
: length of the coil (meters)
.TP
fill
: ratio of coil length to closewound length
.TP
AWG
: wire size (American Wire Gauge)
.TP
rho
: resistivity of wire (ohm-m)
.TP
dia
: inside diameter of coil (meters)
.TP
freq
: analysis frequency (Hertz)
.TP
flag
: indicates which parameters should be optimized
.RS
.TP 5
flag=0
: the minimum number of turns is calculated along with the
corresponding required length/fill.  The diameter is held constant. 
.TP
flag=1
: the number of turns is fixed at the value given and the required
length/fill is calculated.  The diameter is held constant. 
.RE
.TP
N_out
: calculated required number of turns
.TP
len_out
: calculated required length (meters)
.TP
fill_out
: calculated required fill
.SH DESCRIPTION
function to synthesize the physical parameters of a single layer,
uniformly spaced, air core, solenoid inductor.  The physical
dimensions of the coil are synthesized from an inductance 
specification.
.SH EXAMPLE
.nf
L=220e-9;         // we want 220 nH
N=0;              // we'll synthesize the number of turns
len=0;            // we'll synthesize the length/fill
fill=0;           // we'll synthesize the length/fill
AWG=22;           // wire size
rho=1.72e-8;      // Resistivity of copper (ohm-m)
dia=0.25*0.0254;  // 0.25 inches inside diameter
f=10e6;           // 10 MHz operation
flag=0;           // synthesize for minimum number of turns
[Nout,len_out,fill_out] = air_coil_syn(L,N,len,fill,AWG,rho,dia,f,flag);
disp(sprintf('Number of turns = %g ',Nout));
disp(sprintf('Length=%g inches',len_out/0.0254));
disp(sprintf('Fill=%g',fill_out));
.fi
.SH SEE ALSO
air_coil_calc
.SH AUTHOR
Dan McMahill
