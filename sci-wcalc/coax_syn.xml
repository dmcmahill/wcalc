<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "man.dtd" [
<!ENTITY see_also SYSTEM "see_also.xml">
]>
<TOP>
<MAN>
<!--
    Copyright (C) 2001, 2004, 2005, 2006 Dan McMahill
    All rights reserved.
   
    
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; version 2 of the License.
    
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
    
-->

<NAME>coax_syn</NAME>

<SHORTDESCR>Coaxial transmission line synthesis
</SHORTDESCR>

<SYNOPSIS>
[a_out,b_out,c_out,er_out,len] = 
  coax_syn(z0,elen,a,b,c,t,rho_a,rho_b,er,tand,f,flag);
</SYNOPSIS>

<PARAMETERS>
  <RHS name="a">radius of inner conductor (meters)</RHS>
  <RHS name="b">inner radius of outer conductor (meters)</RHS>
  <RHS name="c">offset of the inner conductor from the center (meters)</RHS>
  <RHS name="t">thickness of shield (meters)</RHS>
  <RHS name="rho_a">resistivity of inner conductor (ohms/meter)</RHS>
  <RHS name="rho_b">resistivity of outer conductor (ohms/meter)</RHS>
  <RHS name="er">relative permitivitty of dielectric</RHS>
  <RHS name="tand">loss tangent of dielectric</RHS>
  <RHS name="len">physical length of line (meters)</RHS>
  <RHS name="f">operating frequency (Hertz)</RHS>
  <RHS name="flag">indicates which parameters should be optimized
    <ENUM>
      <ITEM name="flag=0">synthesize a</ITEM>
      <ITEM name="flag=1">synthesize b</ITEM>
      <ITEM name="flag=2">synthesize c</ITEM>
      <ITEM name="flag=3">synthesize er</ITEM>
    </ENUM>
  </RHS>

  <LHS name="a_out">synthesized radius of inner conductor (meters)</LHS>
  <LHS name="b_out">synthesized inner radius of outer conductor (meters)</LHS>
  <LHS name="c_out">synthesized offset of the inner conductor from the center (meters)</LHS>
  <LHS name="er_out">synthesized relative permitivitty of dielectric</LHS>
  <LHS name="len">synthesized physical length of line (meters)</LHS>
</PARAMETERS>

<DESCRIPTION>
Function to synthesize the physical parameters of a
coaxial transmission line to achieve a given set of
electrical characteristics.
</DESCRIPTION>

<EXAMPLE>

  <SCIEX><SCICMD>sf=25.4e-6;</SCICMD>  <COMMENT>mils to meters conversion factor</COMMENT></SCIEX>
  <SCIEX><SCICMD>z0=75.0;</SCICMD>     <COMMENT>desired characteristic impedance</COMMENT></SCIEX>
  <SCIEX><SCICMD>elen=90.0;</SCICMD>   <COMMENT>desired electrical length (degrees)</COMMENT></SCIEX>
  <SCIEX><SCICMD>a=10.0*sf;</SCICMD>   <COMMENT>radius of inner conductor</COMMENT></SCIEX>
  <SCIEX><SCICMD>b=100.0*sf;</SCICMD>  <COMMENT>inner radius of outer conductor</COMMENT></SCIEX>
  <SCIEX><SCICMD>c=0*sf;</SCICMD>      <COMMENT>offset of inner conductor</COMMENT></SCIEX>
  <SCIEX><SCICMD>t=5.0*sf;</SCICMD>    <COMMENT>thickness of outer conductor</COMMENT></SCIEX>
  <SCIEX><SCICMD>rho_a=3.5e-8;</SCICMD><COMMENT>resistivity of inner conductor</COMMENT></SCIEX>
  <SCIEX><SCICMD>rho_b=rho_a;</SCICMD> <COMMENT>resistivity of outer conductor</COMMENT></SCIEX>
  <SCIEX><SCICMD>er=9.5;</SCICMD>      <COMMENT>relative permitivitty of dielectric</COMMENT></SCIEX>
  <SCIEX><SCICMD>tand=0.01;</SCICMD>   <COMMENT>dielectric loss tangent</COMMENT></SCIEX>
  <SCIEX><SCICMD>f=100e6;</SCICMD>     <COMMENT>100 MHz operation</COMMENT></SCIEX>
  <SCIEX><SCICMD>flag=1;</SCICMD>      <COMMENT>synthesize b</COMMENT></SCIEX>
  <SCIEX><SCICMD>[a,b,c,er,len] = ...</SCICMD></SCIEX>
  <SCIEX><SCICMD>   coax_syn(z0,elen,a,b,c,t,rho_a,rho_b,er,tand,f,flag);</SCICMD></SCIEX>
  <SCIEX><SCICMD>disp(sprintf('z0   = %g Ohms',z0));</SCICMD></SCIEX>
  <SCIEX><SCICMD>disp(sprintf('elen = %g degrees',elen));</SCICMD></SCIEX>
  <SCIEX><SCICMD>disp(sprintf('a    = %g m',a));</SCICMD></SCIEX>
  <SCIEX><SCICMD>disp(sprintf('b    = %g m',b));</SCICMD></SCIEX>
  <SCIEX><SCICMD>disp(sprintf('c    = %g m',c));</SCICMD></SCIEX>
  <SCIEX><SCICMD>disp(sprintf('er   = %g ',er));</SCICMD></SCIEX>
  <SCIEX><SCICMD>disp(sprintf('len  = %g m',len));</SCICMD></SCIEX>

  <STDEX>
*
coax_syn 75 90 0.25 2 0 1 3.5e-8 3.5e-8 1.0 0.0 1.0e9 0
*
  </STDEX>
</EXAMPLE>

<SEE_ALSO>
&see_also;
</SEE_ALSO>

<AUTHOR>
Dan McMahill
</AUTHOR>

<BUGS>
None known
</BUGS>

</MAN>
</TOP>

