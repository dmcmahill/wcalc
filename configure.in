dnl $Id: configure.in,v 1.56 2004/01/10 05:41:46 dan Exp $
dnl Process this file with autoconf to produce a configure script.
dnl
dnl
dnl Copyright (c) 1999, 2000, 2001, 2002, 2003, 2004 Dan McMahill
dnl All rights reserved.
dnl
dnl This code is derived from software written by Dan McMahill
dnl
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions
dnl are met:
dnl 1. Redistributions of source code must retain the above copyright
dnl    notice, this list of conditions and the following disclaimer.
dnl 2. Redistributions in binary form must reproduce the above copyright
dnl    notice, this list of conditions and the following disclaimer in the
dnl    documentation and/or other materials provided with the distribution.
dnl 3. All advertising materials mentioning features or use of this software
dnl    must display the following acknowledgement:
dnl        This product includes software developed by Dan McMahill
dnl 4. The name of the author may not be used to endorse or promote products
dnl    derived from this software without specific prior written permission.
dnl
dnl THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
dnl IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
dnl OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
dnl IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
dnl INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
dnl BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
dnl LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
dnl AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
dnl OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
dnl OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
dnl SUCH DAMAGE.
dnl

AC_INIT(gtk-wcalc/wcalc.c)
AM_INIT_AUTOMAKE(wcalc, 0.5)
AM_CONFIG_HEADER(config.h)

dnl determine host type
dnl AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_PROG_AWK
AC_PROG_INSTALL
AM_PROG_LIBTOOL

dnl used for processing the drawings to give png's
dnl and xpm's
AC_PATH_PROG(TGIF, tgif)

if test "X$TGIF" = "Xno" ; then
	TGIF_NO=""
	TGIF_YES="@#"
else
	TGIF_NO="@#"
	TGIF_YES=""
fi
AC_SUBST(TGIF_NO)
AC_SUBST(TGIF_YES)

#
# ------------- scilab tests -------------------
#
SCI_WCALC=sci-wcalc

AC_ARG_WITH([scilab],
[  --with-scilab=scidir    Use the specified scilab installation.  
                          The specified directory should be the base of
                          your scilab installation.  For example,
                          /opt/scilab-2.6.  [default = search for
                          an installed scilab]],
[
if test "X$with_scilab" = "Xno" ; then
	SCI_WCALC=""
else
	SCI=$with_scilab
fi
],
[
AC_PATH_PROG(SCILAB,scilab)
if test "X$SCILAB" != "X" ; then
	AC_MSG_CHECKING([for the scilab base directory])
	[SCI=`$AWK  '/^[ \t]*SCI[ \t]*=/ {print;}' $SCILAB | sed -e 's;.*SCI.*=;;g' -e 's;\";;g'`]
	AC_MSG_RESULT([$SCI])
else
	SCI_WCALC=""
fi
])


if test "X$SCI_WCALC" != "X"; then
	AC_MSG_CHECKING([for the scilab stack header])
	if test -f $SCI/routines/stack-c.h ; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		AC_MSG_WARN([The directory $SCI does not appear to be the root
of a complete (and working) scilab installation.
The scilab interface will not be built.])
		SCI_WCALC=""
	fi
fi

if test "X$SCI_WCALC" != "X"; then
	AC_MSG_CHECKING([for the scilab version])
	[SCI_VER=`$AWK  '/^[ \t]*VERSION[ \t]*=/ {print;}' $SCILAB | \
		sed -e 's;.*VERSION.*=;;g' -e 's;\";;g' -e 's;scilab-;;g'`]
	AC_MSG_RESULT([$SCI_VER])
else
	SCI_VER=""
fi

AC_SUBST(SCI)
AC_SUBST(SCI_VER)
AC_SUBST(SCI_WCALC)

# ------------- done with scilab tests -------------------

#
# ------------- octave tests -------------------
#
OCT_WCALC=octave-wcalc

AC_ARG_WITH([octave],
[  --with-octave=octdir    Use the specified octave installation.  
                          The specified directory should be the base of
                          your octave installation.  For example,
                          /opt/octave-2.6.  [default = search for
                          an installed octave]],
[
if test "X$with_octave" = "Xno" ; then
	OCT_WCALC=""
else
	OCT=$with_octave
	OCT_WCALC="octave-wcalc"
fi
],
[
OCT_WCALC=""
with_octave=no
])


if test "X$OCT_WCALC" != "X"; then
	AC_MSG_CHECKING([for the octave stack header])
	if test -f $OCT/routines/stack-c.h ; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		AC_MSG_WARN([The directory $OCT does not appear to be the root
of a complete (and working) octave installation.
The octave interface will not be built.])
		OCT_WCALC=""
	fi
fi

AC_SUBST(OCT)
AC_SUBST(OCT_WCALC)

# ------------- done with octave tests -------------------

# ------------- enable/disable web pages  -------------------

AC_MSG_CHECKING([if the web site should be generated])
AC_ARG_ENABLE([htdocs],
[  --enable-htdocs         Causes the web page to be built [default=no]],
[
if test "X$enable_htdocs" = "Xno" ; then
	HTDOCS=""
	AC_MSG_RESULT([no])
else
	HTDOCS="htdocs"
	AC_MSG_RESULT([yes])
fi
],
[
HTDOCS=""
AC_MSG_RESULT([no])
])
AC_SUBST(HTDOCS)

# ------------- done with --enable-htdocs -------------------

# ------------- enable/disable stdio frontend  -------------------

AC_MSG_CHECKING([if the stdio frontend should be compiled])
AC_ARG_ENABLE([stdio],
[  --enable-stdio          Causes the stdio frontend to be built [default=yes]],
[
if test "X$enable_stdio" = "Xno" ; then
	STDIO_WCALC=""
	AC_MSG_RESULT([no])
else
	STDIO_WCALC="stdio-wcalc"
	AC_MSG_RESULT([yes])
fi
],
[
STDIO_WCALC="stdio-wcalc"
AC_MSG_RESULT([yes])
])
AC_SUBST(STDIO_WCALC)

# ------------- done with --enable-stdio -------------------

# ------------- enable/disable CGI frontend  -------------------

AC_MSG_CHECKING([if the CGI frontend should be compiled])
AC_ARG_ENABLE([cgi],
[  --enable-cgi            Causes the CGI frontend to be built [default=yes]],
[
if test "X$enable_cgi" = "Xno" ; then
	CGI_WCALC=""
	AC_MSG_RESULT([no])
else
	CGI_WCALC="cgi-wcalc"
	AC_MSG_RESULT([yes])
fi
],
[
CGI_WCALC="cgi-wcalc"
AC_MSG_RESULT([yes])
])
AC_SUBST(CGI_WCALC)

# ------------- done with --enable-cgi -------------------


# ------------- enable/disable GTK+ frontend  -------------------

AC_ARG_ENABLE([gtk],
[  --enable-gtk            Causes the GTK+ frontend to be built [default=yes]],
[
if test "X$enable_gtk" = "Xno" ; then
	GTK_WCALC=""
else
	GTK_WCALC="gtk-wcalc"
fi
],
[
GTK_WCALC="gtk-wcalc"
])
AC_SUBST(GTK_WCALC)

# ------------- done with --enable-gtk -------------------

# ------------- pathnames  -------------------

# where to install the CGI programs

AC_MSG_CHECKING([where to install the CGI programs])
AC_ARG_WITH([cgibin],
[  --with-cgibin=cgibin    Install the CGI programs in the specified
                          directory.  [default = libexecdir/cgi-bin]],
[
if test "X$with_cgibin" = "Xno" ; then
	AC_ERROR([--without-cgibin is not allowed])
else
	CGIBINDIR=$with_cgibin
fi
],
[
CGIBINDIR='${libexecdir}/cgi-bin'
])
AC_MSG_RESULT([$CGIBINDIR])
AC_SUBST(CGIBINDIR)

# path to the CGI programs on the webserver

AC_MSG_CHECKING([URI path to  the CGI programs])
AC_ARG_WITH([cgipath],
[  --with-cgipath=cgipath  Path used by the web server to access
                          the CGI programs. [default = /cgi-bin/]],
[
if test "X$with_cgipath" = "Xno" ; then
	AC_ERROR([--without-cgipath is not allowed])
else
	CGIPATH=$with_cgipath
fi
],
[
CGIPATH='/cgi-bin/'
])
AC_MSG_RESULT([$CGIPATH])
AC_SUBST(CGIPATH)

# where to install the HTML pages and .PNG files:

AC_MSG_CHECKING([where to install the html pages])
AC_ARG_WITH([htmldir],
[  --with-htmldir=htmldir  Install the HTML files and PNG images needed
                          for the web page and the the CGI interface to
                          this directory.  The specified directory must
                          be accessible to the web server.
                          [default = pkgdatadir]],
[
if test "X$with_htmldir" = "Xno" ; then
	AC_ERROR([--without-htmldir is not allowed])
else
	HTMLDIR=$with_htmldir
fi
],
[
HTMLDIR='${pkgdatadir}'
])
AC_MSG_RESULT([$HTMLDIR])
AC_SUBST(HTMLDIR)

# path to the HTML pages and .PNG files for the webserver:


AC_MSG_CHECKING([for the URI path to the web pages])
AC_ARG_WITH([htmlpath],
[  --with-htmlpath=htmlpath    Path used by the web server to access the
                          HTML files and PNG images.
                          [default = /wcalc/]],
[
if test "X$with_htmlpath" = "Xno" ; then
	AC_ERROR([--without-htmlpath is not allowed])
else
	HTMLPATH=$with_htmlpath
fi
],
[
HTMLPATH='/wcalc/'
])
AC_MSG_RESULT([$HTMLPATH])
AC_SUBST(HTMLPATH)


# ------------- done with path tests -------------------

# ------------- enable/disable Matlab/MEX frontend  -------------------

MATLAB_DIR=""

# because automake insists that .m files are for objective-C
OBJC="echo"
AC_SUBST(OBJC)

AC_ARG_WITH([matlab],
[  --with-matlab=matlabdir Base of matlab installation.
                          [default=do not build matlab interface]],
[
if test "X$with_matlab" = "Xno" ; then
	MEX_WCALC=""
else
	MEX_WCALC="mex-wcalc"
	MATLAB_DIR=$with_matlab
fi
],
[
with_matlab=no
MEX_WCALC=""
])
AC_SUBST(MATLAB_DIR)
AC_SUBST(MEX_WCALC)

# ------------- done with --with-matlab -------------------

# mex -h (from matlab 6 release 12.1) says:
#   sol2, SunOS 5.x - .mexsol
#	hpux            - .mexhpux
#	hp700           - .mexhp7
#	ibm_rs          - .mexrs6
#	sgi             - .mexsg
#	alpha           - .mexaxp
#	glnx86          - .mexglx
#	Windows         - .dll

AC_PATH_PROG(MEX, mex)
AC_MSG_CHECKING([for matlab mex suffix])
case $host in
	rs6000-*-aix* )
		MEXSFX="mexrs6"
		;;

	*-*-cygwin* )
		MEXSFX="dll"
		;;

	hppa*-*-hpux* )
		MEXSFX="mexhpux"
		;;

	*-*-irix* )
		MEXSFX="mexsg"
		;;

	i?86-*-linux* )
		MEXSFX="mexglx"
		;;

	*-*-mingw* )
		MEXSFX="dll"
		;;

	alpha-*-netbsd* )
		# use the osf/alpha version
		MEXSFX="mexaxp"
		;;

	i386-*-netbsd* )
		# use the linux x86 version
		MEXSFX="mexglx"
		;;

	mips*-*-netbsd* )
		# use the irix/mips version
		MEXSFX="mexsg"
		;;

	rs6000-*-netbsd* )
		# use the aix/rs6000 version
		MEXSFX="mexrs6"
		;;

	sparc-*-netbsd* )
		# use the solaris/sparc version
		MEXSFX="mexsol"
		;;

	alpha-*-osf* )
		MEXSFX="mexaxp"
		;;

	hppa*-*-osf )
		MEXSFX="mexhp7"
		;;

	*-*-solaris* )
		MEXSFX="mexsol"
		;;

	* )
		MEXSFX="unknown"
		;;

esac
AC_MSG_RESULT([$MEXSFX])

AC_SUBST(MEXSFX)

# ------------- end of matlab mex -------------------

AC_EXEEXT
AC_SUBST(EXEEXT)

AC_MSG_CHECKING(for windows)
case $host in
	*-*-cygwin* )
		WIN32=yes
		CFLAGS="$CFLAGS -fnative-struct -mno-cygwin"
		;;

	*-*-mingw* )
		WIN32=yes
		CFLAGS="$CFLAGS -fnative-struct"
		;;

	* )
		WIN32=no
esac
AC_MSG_RESULT($WIN32)
AC_SUBST(WIN32)

dnl see if make sets MAKE
AC_PROG_MAKE_SET

dnl check for AWK capabilities
AC_AWK_GENSUB(
[
AWK_GENSUB_YES=""
AWK_GENSUB_NO="@#"
] ,[
AWK_GENSUB_YES="@#"
AWK_GENSUB_NO=""
])
AC_SUBST(AWK_GENSUB_YES)
AC_SUBST(AWK_GENSUB_NO)

dnl check for headers
AC_HEADER_STDC
AC_CHECK_HEADERS(string.h)

dnl check for libc functions
AC_CHECK_FUNCS(vsnprintf)

dnl check for math functions
AC_CHECK_LIB(m,sin)
AC_CHECK_FUNCS(rint)


dnl gettext
AM_GNU_GETTEXT

# ------------- GTK -------------------
dnl GTK checks
AC_MSG_CHECKING([if gtk-wcalc should be built])
if test "X$enable_gtk" != "Xno" ; then
	AC_MSG_RESULT([yes])
	AC_PATH_PROG(GTK_CONFIG,gtk-config,none)
	if test "$WIN32" = "yes"; then
		dnl XXX this is a hack.  It needs to be detected...
		GTK_VER=1.3
		GLIB_VER=1.3
		GTK=c:/cygwin/usr/local/src/gtk+
		GLIB=c:/cygwin/usr/local/src/glib
		GLIB_CFLAGS="-I${GLIB} -I${GLIB}/gmodule"
		GTK_CFLAGS="$GLIB_CFLAGS -I${GTK}/gdk -I${GTK}"
		GLIB_LIBS="-L${GLIB} -lglib-${GLIB_VER} \
		   -L${GLIB}/gmodule -lgmodule-${GLIB_VER} \
		   -L${GLIB}/gthread -lgthread-${GLIB_VER} \
		   -L${GLIB}/gobject -lgobject-${GLIB_VER}"
		GTK_LIBS="$GLIB_LIBS \
		  -L${GTK}/gtk -lgtk-${GTK_VER} \
		  -L${GTK}/gdk -lgdk-${GTK_VER}"
	elif test "x$GTK_CONFIG" = "xnone"; then
		AC_MSG_ERROR([You must have gtk installed on your system])
	else
		AC_MSG_CHECKING([if gtk is version 1.2 or later])
		GTK_VER=`$GTK_CONFIG --version`

		case $GTK_VER in
		0.* )
			AC_MSG_ERROR([you need at least version 1.2 of gtk])
			;;
		1.1* )
			AC_MSG_ERROR([you need at least version 1.2 of gtk])
			;;
		* )
			AC_MSG_RESULT([$GTK_VER])
			GTK_CFLAGS=`$GTK_CONFIG --cflags`
			GTK_LIBS=`$GTK_CONFIG --libs`
			;;
		esac	
	fi
else
	AC_MSG_RESULT([no])
	GTK_CFLAGS=""
	GTK_LIBS=""
fi
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)
	

# ------------- dmalloc -------------------
dnl dmalloc checks
AC_MSG_CHECKING([if dmalloc debugging should be enabled])
AC_ARG_ENABLE([dmalloc],
[  --enable-dmalloc        Compile and link with dmalloc for malloc debugging [default=no]],
[
if test "X$enable_dmalloc" != "Xno" ; then
	AC_MSG_RESULT([yes])
	AC_CHECK_HEADERS(dmalloc.h)
	DMALLOC_CFLAGS="-I/usr/pkg/include -DDMALLOC"
	DMALLOC_LIBS="-L/usr/pkg/lib -R/usr/pkg/lib -ldmalloc"
else
	AC_MSG_RESULT([no])
	DMALLOC_CFLAGS=""
	DMALLOC_LIBS=""
fi
],
[
DMALLOC_CFLAGS=""
DMALLOC_LIBS=""
AC_MSG_RESULT([no])
])
AC_SUBST(DMALLOC_CFLAGS)
AC_SUBST(DMALLOC_LIBS)

# ------------- ElectricFence -------------------
dnl dmalloc checks
AC_MSG_CHECKING([if ElectricFence debugging should be enabled])
AC_ARG_ENABLE([efence],
[  --enable-efence         Link with ElectricFence for malloc debugging [default=no]],
[
if test "X$enable_efence" != "Xno" ; then
	AC_MSG_RESULT([yes])
	EFENCE_LIBS="-L/usr/pkg/lib -R/usr/pkg/lib -lefence"
else
	AC_MSG_RESULT([no])
	EFENCE_LIBS=""
fi
],
[
EFENCE_LIBS=""
AC_MSG_RESULT([no])
])
AC_SUBST(EFENCE_LIBS)

LIBWALC_LDFLAGS=""
if test "x$GCC" = "xyes"; then
	dnl Only use -Wall if we have gcc
	if test -z "`echo "$CFLAGS" | grep "\-Wall" 2> /dev/null`" ; then
		CFLAGS="$CFLAGS -Wall"
	fi
	
	dnl gcc on sparc with shared libs version of libwcalc
	dnl segfaults on ic_microstrip.c.  
	case $host in
   	sparc-*-* )
		AC_MSG_NOTICE([Avoiding gcc on sparc with shared lib bug])
		#LIBWALC_LDFLAGS="-all-static"
		;;
	esac

fi
AC_SUBST(LIBWALC_LDFLAGS)

# print a summary of paths and such since there are a bunch
AC_MSG_NOTICE([
--------------------------------------------
   cgi-wcalc options
--------------------------------------------
html directory = $HTMLDIR
html path      = $HTMLPATH
cgi directory  = $CGIBINDIR
cgi path       = $CGIPATH
--------------------------------------------
])

AC_OUTPUT(
	Makefile 
	doc/Makefile
	include/Makefile
	intl/Makefile
	m4/Makefile
	po/Makefile.in
	libwcalc/Makefile
	cgi-wcalc/Makefile
	gtk-wcalc/Makefile
	htdocs/Makefile
	htdocs/mex-man/Makefile
	htdocs/octave-man/Makefile
	htdocs/sci-man/Makefile
	mex-wcalc/Makefile
	octave-wcalc/Makefile
	sci-wcalc/Makefile
	stdio-wcalc/Makefile
	pixmaps/Makefile
	utils/Makefile
)

